.TH "src/libtrace.c" 3 "Fri Jul 24 2015" "datetimetz-converter-libhelper-0.5" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/libtrace.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <time\&.h>\fP
.br
\fC#include 'libtrace\&.h'\fP
.br
\fC#include 'libdatetimetz_converter_parameter\&.h'\fP
.br
\fC#include 'libdatetimetz_converter_timestamptzformat\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBformatted_now\fP (char **nowstr)"
.br
.ti -1c
.RI "int \fBlog_message\fP (char *msg, int msglevel, char *msgheader)"
.br
.ti -1c
.RI "int \fBlog_exit_critical\fP (char *msg)"
.br
.RI "\fIwrites the given message depending on TRACE_LEVEL \fP"
.ti -1c
.RI "int \fBlog_critical\fP (char *msg)"
.br
.RI "\fIWrites a 'critical' level message\&. \fP"
.ti -1c
.RI "int \fBlog_warning\fP (char *msg)"
.br
.RI "\fIWrites a 'warning' level message\&. \fP"
.ti -1c
.RI "int \fBlog_info\fP (char *msg)"
.br
.RI "\fIWrites a 'info' level message\&. \fP"
.ti -1c
.RI "int \fBlog_fine\fP (char *msg)"
.br
.RI "\fIWrites a 'fine' level message\&. \fP"
.ti -1c
.RI "int \fBlog_finer\fP (char *msg)"
.br
.RI "\fIWrites a 'fine' level message\&. \fP"
.ti -1c
.RI "int \fBlog_finest\fP (char *msg)"
.br
.RI "\fIWrites a 'finest' level message\&. \fP"
.ti -1c
.RI "int \fBlog_debug\fP (char *msg)"
.br
.RI "\fIWrites a 'debug' level message\&. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBTRACE_LEVEL\fP"
.br
.RI "\fITRACE_LEVEL (variable) \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "int formatted_now (char **nowstr)"

.PP
Definition at line 32 of file libtrace\&.c\&.
.PP
References iso8601TZOffset, and TIMESTAMPMAXLENGTH\&.
.PP
Referenced by log_message()\&.
.SS "int log_critical (char *msg)"

.PP
Writes a 'critical' level message\&. 
.PP
Definition at line 81 of file libtrace\&.c\&.
.PP
References log_message(), TRACE_LEVEL_CRITICAL, and TRACE_LEVEL_CRITICAL_HEADER\&.
.PP
Referenced by log_exit_critical()\&.
.SS "int log_debug (char *msg)"

.PP
Writes a 'debug' level message\&. 
.PP
Definition at line 132 of file libtrace\&.c\&.
.PP
References log_message(), TRACE_LEVEL_DEBUG, and TRACE_LEVEL_DEBUG_HEADER\&.
.PP
Referenced by assert_pointer_is_not_null(), assert_string_is_not_null(), parseRawString(), and regexp_verify()\&.
.SS "int log_exit_critical (char *msg)"

.PP
writes the given message depending on TRACE_LEVEL Writes messages according to TRACE_LEVEL
.PP
input : msg - the message to be written
.PP
output stream : stderr (hard coded)Writes a 'critical' level message + aborts the program 
.PP
Definition at line 70 of file libtrace\&.c\&.
.PP
References actionOnFailureOpts, and log_critical()\&.
.PP
Referenced by assert_pointer_is_not_null(), and assert_string_is_not_null()\&.
.SS "int log_fine (char *msg)"

.PP
Writes a 'fine' level message\&. 
.PP
Definition at line 105 of file libtrace\&.c\&.
.PP
References log_message(), TRACE_LEVEL_FINE, and TRACE_LEVEL_FINE_HEADER\&.
.SS "int log_finer (char *msg)"

.PP
Writes a 'fine' level message\&. 
.PP
Definition at line 114 of file libtrace\&.c\&.
.PP
References log_message(), TRACE_LEVEL_FINER, and TRACE_LEVEL_FINER_HEADER\&.
.SS "int log_finest (char *msg)"

.PP
Writes a 'finest' level message\&. 
.PP
Definition at line 123 of file libtrace\&.c\&.
.PP
References log_message(), TRACE_LEVEL_FINEST, and TRACE_LEVEL_FINEST_HEADER\&.
.PP
Referenced by regexp_verify()\&.
.SS "int log_info (char *msg)"

.PP
Writes a 'info' level message\&. 
.PP
Definition at line 97 of file libtrace\&.c\&.
.PP
References log_message(), TRACE_LEVEL_INFO, and TRACE_LEVEL_INFO_HEADER\&.
.SS "int log_message (char *msg, intmsglevel, char *msgheader)"

.PP
Definition at line 46 of file libtrace\&.c\&.
.PP
References formatted_now(), and TRACE_LEVEL\&.
.PP
Referenced by log_critical(), log_debug(), log_fine(), log_finer(), log_finest(), log_info(), and log_warning()\&.
.SS "int log_warning (char *msg)"

.PP
Writes a 'warning' level message\&. 
.PP
Definition at line 89 of file libtrace\&.c\&.
.PP
References log_message(), TRACE_LEVEL_WARNING, and TRACE_LEVEL_WARNING_HEADER\&.
.SH "Variable Documentation"
.PP 
.SS "int TRACE_LEVEL"

.PP
TRACE_LEVEL (variable) 
.PP
Definition at line 29 of file libtrace\&.c\&.
.PP
Referenced by log_message()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for datetimetz-converter-libhelper-0\&.5 from the source code\&.
